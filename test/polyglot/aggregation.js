#!/usr/local/bin/node
// -*- coding: utf-8 -*-

'use strict';
const common = require('./common'),
      setup_table = common.setup_table,
      setup_table_check = common.setup_table_check,
      test = common.test,
      define = common.define,
      the_end = common.the_end;

setup_table('tbl', 'polyglot_aggregation_js7_2', 'test')
setup_table('tbl2', 'polyglot_aggregation_js7_2_tbl1', 'test')
setup_table('tbl3', 'polyglot_aggregation_js7_2_tbl2', 'test')
setup_table('tbl4', 'polyglot_aggregation_js7_2_tbl3', 'test')
setup_table_check()

test("r.range(100).forEach(tbl.insert({'id':r.row, 'a':r.row.mod(4)}))", "({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':100})", 'line 6', {}, {})
test("r.range(100).forEach(tbl2.insert({'id':r.row, 'a':r.row.mod(4)}))", "({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':100})", 'line 10', {}, {})
test("r.range(100).forEach(tbl3.insert({'id':r.row, 'a':r.row.mod(4), 'b':{'c':r.row.mod(5)}}))", "({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':100})", 'line 14', {}, {})
define('1375115782.24 * 1000', 'time1')
define('1375147296.68 * 1000', 'time2')
test("tbl4.insert({'id':0, 'time':r.epochTime(time1)})", "({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':1})", 'line 27', {}, {})
test("tbl4.insert({'id':1, 'time':r.epochTime(time2)})", "({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':1})", 'line 28', {}, {})
test("tbl.sum('a')", '150', 'line 33', {}, {})
test("tbl.map(function(row){return row('a')}).sum()", '150', 'line 37', {}, {})
test("tbl.group('a').sum('id')", "([{'group':0,'reduction':1200},{'group':1,'reduction':1225},{'group':2,'reduction':1250},{'group':3,'reduction':1275}])", 'line 39', {}, {})
test("tbl.avg('a')", '1.5', 'line 43', {}, {})
test("tbl.map(function(row){return row('a')}).avg()", '1.5', 'line 47', {}, {})
test("tbl.group('a').avg('id')", "[{'group':0,'reduction':48},{'group':1,'reduction':49},{'group':2,'reduction':50},{'group':3,'reduction':51}]", 'line 49', {}, {})
test("tbl.min('a')('a')", '0', 'line 54', {}, {})
test("tbl.orderBy('id').min('a')", "({'a':0, 'id':0})", 'line 56', {}, {})
test("tbl.map(function(row){return row('a')}).min()", '0', 'line 60', {}, {})
test("tbl.group('a').min('id')", "[{'group':0,'reduction':{'a':0, 'id':0}},{'group':1,'reduction':{'a':1, 'id':1}},{'group':2,'reduction':{'a':2, 'id':2}},{'group':3,'reduction':{'a':3, 'id':3}}]", 'line 62', {}, {})
test("tbl.orderBy('id').max('a')", "({'a':3, 'id':3})", 'line 66', {}, {})
test("tbl.map(function(row){return row('a')}).max()", '3', 'line 70', {}, {})
test("tbl.group('a').max('id')", "[{'group':0,'reduction':{'a':0, 'id':96}},{'group':1,'reduction':{'a':1, 'id':97}},{'group':2,'reduction':{'a':2, 'id':98}},{'group':3,'reduction':{'a':3, 'id':99}}]", 'line 72', {}, {})
test('tbl.min()', '({"a":0, "id":0})', 'line 77', {}, {})
test("tbl.group('a').min()", '[{\'group\':0,\'reduction\':{"a":0,"id":0}},{\'group\':1,\'reduction\':{"a":1,"id":1}},{\'group\':2,\'reduction\':{"a":2,"id":2}},{\'group\':3,\'reduction\':{"a":3,"id":3}}]', 'line 79', {}, {})
test('tbl.max()', '({"a":3, "id":99})', 'line 83', {}, {})
test("tbl.group('a').max()", '[{\'group\':0,\'reduction\':{"a":0,"id":96}},{\'group\':1,\'reduction\':{"a":1,"id":97}},{\'group\':2,\'reduction\':{"a":2,"id":98}},{\'group\':3,\'reduction\':{"a":3,"id":99}}]', 'line 85', {}, {})
test("tbl.sum(function(row){return row('a')})", '150', 'line 95', {}, {})
test("tbl.sum(r.row('a'))", '150', 'line 96', {}, {})
test("tbl.map(function(row){return row('a')}).sum()", '150', 'line 100', {}, {})
test("tbl.group(function(row){return row('a')}).sum(function(row){return row('id')})", "[{'group':0,'reduction':1200},{'group':1,'reduction':1225},{'group':2,'reduction':1250},{'group':3,'reduction':1275}]", 'line 104', {}, {})
test("tbl.avg(function(row){return row('a')})", '1.5', 'line 114', {}, {})
test("tbl.avg(r.row('a'))", '1.5', 'line 115', {}, {})
test("tbl.map(function(row){return row('a')}).avg()", '1.5', 'line 119', {}, {})
test("tbl.group(function(row){return row('a')}).avg(function(row){return row('id')})", "[{'group':0,'reduction':48},{'group':1,'reduction':49},{'group':2,'reduction':50},{'group':3,'reduction':51}]", 'line 123', {}, {})
test("tbl.orderBy(r.desc('id')).min(function(row){return row('a')})", "({'a':0, 'id':96})", 'line 132', {}, {})
test("tbl.orderBy(r.desc('id')).min(r.row('a'))", "({'a':0, 'id':96})", 'line 133', {}, {})
test("tbl.orderBy(r.desc('id')).min(function(row){return row('a')})('a')", '0', 'line 141', {}, {})
test("tbl.orderBy(r.desc('id')).min(r.row('a'))('a')", '0', 'line 142', {}, {})
test("tbl.map(function(row){return row('a')}).min()", '0', 'line 146', {}, {})
test("tbl.group(function(row){return row('a')}).min(function(row){return row('id')})('id')", "[{'group':0,'reduction':0},{'group':1,'reduction':1},{'group':2,'reduction':2},{'group':3,'reduction':3}]", 'line 150', {}, {})
test("tbl.max(function(row){return row('a')})('a')", '3', 'line 160', {}, {})
test("tbl.max(r.row('a'))('a')", '3', 'line 161', {}, {})
test("tbl.map(function(row){return row('a')}).max()", '3', 'line 165', {}, {})
test("tbl.group(function(row){return row('a')}).max(function(row){return row('id')})('id')", "[{'group':0,'reduction':96},{'group':1,'reduction':97},{'group':2,'reduction':98},{'group':3,'reduction':99}]", 'line 169', {}, {})
test("tbl.group(function(row){return row('a')}).map(function(row){return row('id')}).reduce(function(a,b){return a.add(b)})", "[{'group':0,'reduction':1200},{'group':1,'reduction':1225},{'group':2,'reduction':1250},{'group':3,'reduction':1275}]", 'line 176', {}, {})
test("tbl.group(function(row){return row('a')}).map(function(row){return row('id')}).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 188', {'group_format': "'raw'"}, {})
test("tbl.group(r.row('a')).map(r.row('id')).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 189', {'group_format': "'raw'"}, {})
test("r.expr([{'a':1}]).filter(true).limit(1).group('a')", "({'$reql_type$':'GROUPED_DATA', 'data':[[1, [{'a':1}]]]})", 'line 192', {'group_format': "'raw'"}, {})
test("tbl.group('a').typeOf()", '"GROUPED_STREAM"', 'line 198', {}, {})
test("tbl.group('a').count().typeOf()", '"GROUPED_DATA"', 'line 200', {}, {})
test("tbl.group('a').coerceTo('ARRAY').typeOf()", '"GROUPED_DATA"', 'line 202', {}, {})
test("tbl.orderBy({index:'id'}).filter(function(row){return row('id').lt(10)}).group('a').map(function(row){return row('id')}).coerceTo('ARRAY')", "[{'group':0,'reduction':[0,4,8]},{'group':1,'reduction':[1,5,9]},{'group':2,'reduction':[2,6]},{'group':3,'reduction':[3,7]}]", 'line 207', {}, {})
test("tbl.filter(function(row){return row('id').lt(10)}).group('a').count().do(function(x){return x.mul(x)})", "[{'group':0,'reduction':9},{'group':1,'reduction':9},{'group':2,'reduction':4},{'group':3,'reduction':4}]", 'line 214', {}, {})
test("tbl.union(tbl).group(function(row){return row('a')}).map(function(row){return row('id')}).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 226', {'group_format': "'raw'"}, {})
test("tbl.union(tbl).group(r.row('a')).map(r.row('id')).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 227', {'group_format': "'raw'"}, {})
test('tbl.coerceTo("array").union(tbl).group(function(row){return row(\'a\')}).map(function(row){return row(\'id\')}).reduce(function(a,b){return a.add(b)})', "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 238', {'group_format': "'raw'"}, {})
test('tbl.coerceTo("array").union(tbl).group(r.row(\'a\')).map(r.row(\'id\')).reduce(function(a,b){return a.add(b)})', "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 239', {'group_format': "'raw'"}, {})
test('tbl.union(tbl.coerceTo("array")).group(function(row){return row(\'a\')}).map(function(row){return row(\'id\')}).reduce(function(a,b){return a.add(b)})', "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 250', {'group_format': "'raw'"}, {})
test('tbl.union(tbl.coerceTo("array")).group(r.row(\'a\')).map(r.row(\'id\')).reduce(function(a,b){return a.add(b)})', "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 2400], [1, 2450], [2, 2500], [3, 2550]]})", 'line 251', {'group_format': "'raw'"}, {})
test("tbl.group(function(row){return row('a')}).map(function(row){return row('id')}).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 258', {'group_format': "'raw'"}, {})
test("tbl.group(r.row('a')).map(r.row('id')).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 259', {'group_format': "'raw'"}, {})
test("tbl.group('a').map(r.row('id')).reduce(function(a,b){return a.add(b)})", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 260', {'group_format': "'raw'"}, {})
test('tbl.group(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 268', {}, {})
test('tbl.map(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 269', {}, {})
test('tbl.reduce(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 270', {}, {})
test("tbl.group(r.row('a')).group(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 271', {}, {})
test("tbl.group(r.row('a')).map(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 272', {}, {})
test("tbl.group(r.row('a')).reduce(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 273', {}, {})
test("tbl.map(r.row('id')).group(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 274', {}, {})
test("tbl.map(r.row('id')).map(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 275', {}, {})
test("tbl.map(r.row('id')).reduce(function(row){})", "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 276', {}, {})
test('tbl.reduce(function(a,b){return a+b}).group(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 277', {}, {})
test('tbl.reduce(function(a,b){return a+b}).map(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 278', {}, {})
test('tbl.reduce(function(a,b){return a+b}).reduce(function(row){})', "err('ReqlDriverCompileError', 'Anonymous function returned `undefined`. Did you forget a `return`?', [0])", 'line 279', {}, {})
test("tbl.group('a').count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 25], [1, 25], [2, 25], [3, 25]]})", 'line 286', {'group_format': "'raw'"}, {})
test("tbl.group('a').sum('id')", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1200], [1, 1225], [2, 1250], [3, 1275]]})", 'line 292', {'group_format': "'raw'"}, {})
test("tbl.group('a').avg('id')", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 48], [1, 49], [2, 50], [3, 51]]})", 'line 298', {'group_format': "'raw'"}, {})
test("tbl3.group(function(row){return row('b')('c')}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 20], [1, 20], [2, 20], [3, 20], [4, 20]]})", 'line 306', {'group_format': "'raw'"}, {})
test("tbl.group('a', function(row){return row('id').mod(3)}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[[0, 0], 9], [[0, 1], 8], [[0, 2], 8], [[1, 0], 8], [[1, 1], 9], [[1, 2], 8], [[2, 0], 8], [[2, 1], 8], [[2, 2], 9], [[3, 0], 9], [[3, 1], 8], [[3, 2], 8]]})", 'line 314', {'group_format': "'raw'"}, {})
test("tbl.map(function(row) { return row('a'); }).distinct().count()", '4', 'line 330', {}, {})
test('tbl.distinct().typeOf()', '"STREAM"', 'line 334', {}, {})
test('tbl.distinct().count()', '100', 'line 337', {}, {})
test("tbl.distinct({index:'id'}).typeOf()", '"STREAM"', 'line 340', {}, {})
test("tbl.distinct({index:'id'}).count()", '100', 'line 344', {}, {})
test("tbl.indexCreate('a')", "({'created':1})", 'line 348', {}, {})
test("tbl.indexWait('a').pluck('index', 'ready')", "[{'index':'a','ready':true}]", 'line 357', {}, {})
test("tbl.between(0, 1, {index:'a'}).distinct().count()", '25', 'line 366', {}, {})
test("tbl.between(0, 1, {index:'a'}).distinct({index:'id'}).count()", '25', 'line 370', {}, {})
test("tbl.distinct({index:'a'}).typeOf()", '"STREAM"', 'line 407', {}, {})
test("tbl.distinct({index:'a'}).count()", '4', 'line 411', {}, {})
test('tbl.group()', "err('ReqlQueryLogicError', 'Cannot group by nothing.', [])", 'line 415', {}, {})
test("tbl.group({index:'id'}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 1], [15, 1], [16, 1], [17, 1], [18, 1], [19, 1], [20, 1], [21, 1], [22, 1], [23, 1], [24, 1], [25, 1], [26, 1], [27, 1], [28, 1], [29, 1], [30, 1], [31, 1], [32, 1], [33, 1], [34, 1], [35, 1], [36, 1], [37, 1], [38, 1], [39, 1], [40, 1], [41, 1], [42, 1], [43, 1], [44, 1], [45, 1], [46, 1], [47, 1], [48, 1], [49, 1], [50, 1], [51, 1], [52, 1], [53, 1], [54, 1], [55, 1], [56, 1], [57, 1], [58, 1], [59, 1], [60, 1], [61, 1], [62, 1], [63, 1], [64, 1], [65, 1], [66, 1], [67, 1], [68, 1], [69, 1], [70, 1], [71, 1], [72, 1], [73, 1], [74, 1], [75, 1], [76, 1], [77, 1], [78, 1], [79, 1], [80, 1], [81, 1], [82, 1], [83, 1], [84, 1], [85, 1], [86, 1], [87, 1], [88, 1], [89, 1], [90, 1], [91, 1], [92, 1], [93, 1], [94, 1], [95, 1], [96, 1], [97, 1], [98, 1], [99, 1]]})", 'line 419', {'group_format': "'raw'"}, {})
test("tbl.group({index:'a'}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[0, 25], [1, 25], [2, 25], [3, 25]]})", 'line 426', {'group_format': "'raw'"}, {})
test("tbl.group('a', {index:'id'}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[[0, 0], 1], [[0, 4], 1], [[0, 8], 1], [[0, 12], 1], [[0, 16], 1], [[0, 20], 1], [[0, 24], 1], [[0, 28], 1], [[0, 32], 1], [[0, 36], 1], [[0, 40], 1], [[0, 44], 1], [[0, 48], 1], [[0, 52], 1], [[0, 56], 1], [[0, 60], 1], [[0, 64], 1], [[0, 68], 1], [[0, 72], 1], [[0, 76], 1], [[0, 80], 1], [[0, 84], 1], [[0, 88], 1], [[0, 92], 1], [[0, 96], 1], [[1, 1], 1], [[1, 5], 1], [[1, 9], 1], [[1, 13], 1], [[1, 17], 1], [[1, 21], 1], [[1, 25], 1], [[1, 29], 1], [[1, 33], 1], [[1, 37], 1], [[1, 41], 1], [[1, 45], 1], [[1, 49], 1], [[1, 53], 1], [[1, 57], 1], [[1, 61], 1], [[1, 65], 1], [[1, 69], 1], [[1, 73], 1], [[1, 77], 1], [[1, 81], 1], [[1, 85], 1], [[1, 89], 1], [[1, 93], 1], [[1, 97], 1], [[2, 2], 1], [[2, 6], 1], [[2, 10], 1], [[2, 14], 1], [[2, 18], 1], [[2, 22], 1], [[2, 26], 1], [[2, 30], 1], [[2, 34], 1], [[2, 38], 1], [[2, 42], 1], [[2, 46], 1], [[2, 50], 1], [[2, 54], 1], [[2, 58], 1], [[2, 62], 1], [[2, 66], 1], [[2, 70], 1], [[2, 74], 1], [[2, 78], 1], [[2, 82], 1], [[2, 86], 1], [[2, 90], 1], [[2, 94], 1], [[2, 98], 1], [[3, 3], 1], [[3, 7], 1], [[3, 11], 1], [[3, 15], 1], [[3, 19], 1], [[3, 23], 1], [[3, 27], 1], [[3, 31], 1], [[3, 35], 1], [[3, 39], 1], [[3, 43], 1], [[3, 47], 1], [[3, 51], 1], [[3, 55], 1], [[3, 59], 1], [[3, 63], 1], [[3, 67], 1], [[3, 71], 1], [[3, 75], 1], [[3, 79], 1], [[3, 83], 1], [[3, 87], 1], [[3, 91], 1], [[3, 95], 1], [[3, 99], 1]]})", 'line 433', {'group_format': "'raw'"}, {})
test("tbl.group('a', {index:'a'}).count()", "({'$reql_type$':'GROUPED_DATA', 'data':[[[0, 0], 25], [[1, 1], 25], [[2, 2], 25], [[3, 3], 25]]})", 'line 440', {'group_format': "'raw'"}, {})
test("tbl.group('a', function(row){return 'f';}, function(row){return [];}, function(row){return [{}, [0], null, 0];}, {multi:true}).count()", '({\'$reql_type$\':\'GROUPED_DATA\', \'data\':[[[0, "f", null, [0]], 25], [[0, "f", null, null], 25], [[0, "f", null, 0], 25], [[0, "f", null, {}], 25], [[1, "f", null, [0]], 25], [[1, "f", null, null], 25], [[1, "f", null, 0], 25], [[1, "f", null, {}], 25], [[2, "f", null, [0]], 25], [[2, "f", null, null], 25], [[2, "f", null, 0], 25], [[2, "f", null, {}], 25], [[3, "f", null, [0]], 25], [[3, "f", null, null], 25], [[3, "f", null, 0], 25], [[3, "f", null, {}], 25]]})', 'line 448', {'group_format': "'raw'"}, {})
test("tbl.group('a').count().ungroup()", "[{'group':0, 'reduction':25}, {'group':1, 'reduction':25}, {'group':2, 'reduction':25}, {'group':3, 'reduction':25}]", 'line 453', {}, {})
test("tbl.group('a').ungroup()('group')", '[0, 1, 2, 3]', 'line 457', {}, {})
test("tbl.orderBy({index:'id'}).limit(16).group('a','a').map(r.row('id')).sum().ungroup()", "[{'group':[0,0],'reduction':24},{'group':[1,1],'reduction':28},{'group':[2,2],'reduction':32},{'group':[3,3],'reduction':36}]", 'line 461', {}, {})
test("tbl.group('a', null).count().ungroup()", "[{'group':[0,null],'reduction':25},{'group':[1,null],'reduction':25},{'group':[2,null],'reduction':25},{'group':[3,null],'reduction':25}]", 'line 465', {}, {})
test("tbl.group('a', function(row){return [1,'two']},{multi:true}).count().ungroup()", "[{'group':[0,1],'reduction':25},{'group':[0,'two'],'reduction':25},{'group':[1,1],'reduction':25},{'group':[1,'two'],'reduction':25},{'group':[2,1],'reduction':25},{'group':[2,'two'],'reduction':25},{'group':[3,1],'reduction':25},{'group':[3,'two'],'reduction':25}]", 'line 469', {}, {})
test('tbl.count()', '100', 'line 474', {}, {})
test("tbl.filter(r.row('a').ne(1).and(r.row('id').gt(10))).update({'b':r.row('a').mul(10)})", "partial({'errors':0, 'replaced':67})", 'line 477', {}, {})
test("tbl.group('b').count()", '[{"group":null, "reduction":33}, {"group":0, "reduction":22}, {"group":20, "reduction":22}, {"group":30, "reduction":23}]', 'line 482', {}, {})
test("tbl.group('a').sum('b')", '[{"group":0, "reduction":0}, {"group":2, "reduction":440}, {"group":3, "reduction":690}]', 'line 487', {}, {})
test("tbl.group('a').avg('b')", '[{"group":0, "reduction":0}, {"group":2, "reduction":20}, {"group":3, "reduction":30}]', 'line 492', {}, {})
test("tbl.orderBy('id').group('a').min('b')", '[{"group":0, "reduction":{"a":0, "b":0, "id":12}}, {"group":2, "reduction":{"a":2, "b":20, "id":14}}, {"group":3, "reduction":{"a":3, "b":30, "id":11}}]', 'line 497', {}, {})
test("tbl.orderBy('id').group('a').min('id')", '[{"group":0, "reduction":{"a":0, "id":0}}, {"group":1, "reduction":{"a":1, "id":1}}, {"group":2, "reduction":{"a":2, "id":2}}, {"group":3, "reduction":{"a":3, "id":3}}]', 'line 502', {}, {})
test("tbl.orderBy('id').group('a').max('b')", '[{"group":0, "reduction":{"a":0,"b":0, "id":12}}, {"group":2, "reduction":{"a":2, "b":20, "id":14}}, {"group":3, "reduction":{"a":3, "b":30, "id":11}}]', 'line 507', {}, {})
test('tbl.min()', "({'a':0,'id':0})", 'line 512', {}, {})
test("tbl.min({index:'id'})", "({'a':0,'id':0})", 'line 516', {}, {})
test("tbl.min({index:'a'})", "({'a':0,'id':0})", 'line 520', {}, {})
test("tbl.max().without('b')", "({'a':3,'id':99})", 'line 523', {}, {})
test("tbl.max({index:'id'}).without('b')", "({'a':3,'id':99})", 'line 527', {}, {})
test("tbl.max({index:'a'}).without('b')", "({'a':3,'id':99})", 'line 531', {}, {})
test('r.group([ 1, 1, 2 ], r.row).count().ungroup()', "[ {'group': 1, 'reduction': 2}, {'group': 2, 'reduction': 1} ]", 'line 537', {}, {})
test('r.count([ 1, 2 ])', '2', 'line 541', {}, {})
test('r.count([ 1, 2 ], r.row.gt(0))', '2', 'line 542', {}, {})
test('r.sum([ 1, 2 ])', '3', 'line 548', {}, {})
test('r.sum([ 1, 2 ], r.row)', '3', 'line 549', {}, {})
test('r.avg([ 1, 2 ])', '1.5', 'line 553', {}, {})
test('r.avg([ 1, 2 ], r.row)', '1.5', 'line 554', {}, {})
test('r.min([ 1, 2 ])', '1', 'line 558', {}, {})
test('r.min([ 1, 2 ], r.row)', '1', 'line 559', {}, {})
test('r.max([ 1, 2 ])', '2', 'line 563', {}, {})
test('r.max([ 1, 2 ], r.row)', '2', 'line 564', {}, {})
test('r.distinct([ 1, 1 ])', '[ 1 ]', 'line 567', {}, {})
test('r.contains([ 1, 2 ])', 'true', 'line 570', {}, {})
test('r.contains([ 1, 2 ], r.row.gt(0))', 'true', 'line 571', {}, {})

the_end()
